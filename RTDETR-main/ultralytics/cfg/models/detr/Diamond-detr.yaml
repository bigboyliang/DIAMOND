
scales: # model compound scaling constants, i.e. 'model=yolov8n-cls.yaml' will call yolov8-cls.yaml with scale 'n'
  # [depth, width, max_channels]
  l: [1.00, 1.00, 1024]

backbone:
  # [from, repeats, module, args]
  - [-1, 1, ConvNormLayer, [32, 3, 2, None, False, 'relu']] # 0-P1/2
  - [-1, 1, ConvNormLayer, [32, 3, 1, None, False, 'relu']] # 1
  - [-1, 1, ConvNormLayer, [64, 3, 1, None, False, 'relu']] # 2
  - [-1, 1, nn.MaxPool2d, [3, 2, 1]] # 3-P2/4
  
  # [ch_out, block_type, block_nums, stage_num, act, variant]
  - [-1, 1, Blocks, [64, BasicBlock_Faster_Block_Rep, 2, 2, 'relu']] # 4
  - [-1, 1, Blocks, [128, BasicBlock_Faster_Block_Rep, 2, 3, 'relu']] # 5-P3/8
  - [-1, 1, Blocks, [256, BasicBlock_Faster_Block_Rep, 2, 4, 'relu']] # 6-P4/16
  - [-1, 1, Blocks, [512, BasicBlock_Faster_Block_Rep, 2, 5, 'relu']] # 7-P5/32

head:
  - [-1, 1, Conv, [256, 1, 1, None, 1, 1, False]]  # 8 input_proj.2
  - [-1, 1, AIFI, [1024, 8]] # 9
  - [-1, 1, Conv, [256, 1, 1]]  # 10, Y5, lateral_convs.0

  - [-1, 1, ChannelAttention_HSFPN, []] # 11
  - [[-1, 10], 1, Multiply, []] # 12
  - [-1, 1, nn.Conv2d, [256, 1]] # 13
  - [-1, 3, DRBC3, [256, 0.5]] #14
  - [-2, 1, nn.ConvTranspose2d, [256, 3, 2, 1, 1]] # 15

  - [6, 1, ChannelAttention_HSFPN, []] # 16
  - [[-1, 6], 1, Multiply, []] #17
  - [-1, 1, nn.Conv2d, [256, 1]] # 18
  - [15, 1, ChannelAttention_HSFPN, [4, False]] # 19
  - [[-1, -2], 1, Multiply, []] # 20
  - [[-1, 15], 1, Add, []] # 21
  - [-1, 3, DRBC3, [256, 0.5]] # 22 P4/16

  - [15, 1, nn.ConvTranspose2d, [256, 3, 2, 1, 1, 16]] # 23
  - [5, 1, ChannelAttention_HSFPN, []] # 24
  - [[-1, 5], 1, Multiply, []] #25
  - [-1, 1, nn.Conv2d, [256, 1]] # 26
  - [23, 1, ChannelAttention_HSFPN, [4, False]] # 27
  - [[-1, -2], 1, Multiply, []] # 28
  - [[-1, 23], 1, Add, []] # 29
  - [-1, 3, DRBC3, [256, 0.5]] # 30 P3/8

  - [[30, 22, 14], 1, RTDETRDecoder, [nc, 256, 300, 4, 8, 3]]  # Detect(P3, P4, P5)
